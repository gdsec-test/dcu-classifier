---
apiVersion: 'apps/v1'
kind: 'Deployment'
metadata:
  name: 'dcu-scanner'
  namespace: 'abuse-api-prod'
  labels:
    app: 'dcu-scanner'
spec:
  replicas: 14
  revisionHistoryLimit: 2
  selector:
    matchLabels:
      app: 'dcu-scanner'
  template:
    metadata:
      labels:
        app: 'dcu-scanner'
    spec:
      imagePullSecrets:
        -
          name: 'dcu-artifactory-creds'
      containers:
        -
          name: 'dcu-scanner'
          imagePullPolicy: 'Always'
          image: 'docker-dcu-local.artifactory.secureserver.net/dcu-classifier:REPLACE_WITH_GIT_COMMIT'
          resources:
            requests:
              memory: "256Mi"
            limits:
              memory: "512Mi"
          livenessProbe:
            exec:
              command:
                - '/app/health.sh'
            initialDelaySeconds: 10
            periodSeconds: 10
          env:
            - name: BUILD_DATE
              value: 'THIS_STRING_IS_REPLACED_DURING_BUILD'
            - name: sysenv
              value: prod
            - name: WORKER_MODE
              value: scan
            - name: ML_API_CERT
              value: /mlapicerts/tls.crt
            - name: ML_API_KEY
              value: /mlapicerts/tls.key
            - name: BROKER_PASS
              valueFrom:
                secretKeyRef:
                  name: amqp-dcu-classifier
                  key: password
            - name: DB_PASS
              valueFrom:
                secretKeyRef:
                  name: db-phishstory-v2
                  key: password
            - name: API_TOKEN
              valueFrom:
                secretKeyRef:
                  name: api-scanapi-token
                  key: token
            - name: ABUSE_API_CREATE_URL
              value: http://api.abuse-api-prod.svc.cluster.local:5000/v1/abuse/tickets
            - name: URSULA_API_URL
              value: https://api.phishfeed.com/ursula/v1
            - name: URSULA_API_KEY
              valueFrom:
                secretKeyRef:
                  name: ursula-api-token
                  key: token
            - name: URSULA_API_ENABLED
              value: 'True'
            - name: SSO_USER
              valueFrom:
                secretKeyRef:
                  name: abuse-api-user
                  key: username
            - name: SSO_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: abuse-api-user
                  key: password
          volumeMounts:
            - name: tls-files-api
              mountPath: /mlapicerts
              readOnly: true
      volumes:
        - name: tls-files-api
          secret:
            secretName: tls-mlapi-api
